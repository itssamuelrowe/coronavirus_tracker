{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/COVID19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cn","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","modifieddata","map","dailydata","total","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","LineChart","length","borderColor","fill","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDom","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCmGpJC,EA9FD,SAAC,GAA4D,IAAD,IAAzDC,KAAQC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,WAEnD,OAAKH,EAID,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CACIG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAElC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKD,cAAY,GACjC,kBAAC,IAAD,CACIE,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKzB,GAAY0B,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAKR,kBAACf,EAAA,EAAD,CACIG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAElC,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKD,cAAY,GACjC,kBAAC,IAAD,CACIE,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKzB,GAAY0B,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,4CAKR,kBAACf,EAAA,EAAD,CACIG,MAAI,EACJC,UAAWC,IACXC,GAAI,GACJC,GAAI,EACJV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAElC,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UAGA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,KAAKD,cAAY,GACjC,kBAAC,IAAD,CACIE,MAAO,EACPC,IAAKtB,EAAOuB,MACZC,SAAU,IACVC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBACb,IAAIQ,KAAKzB,GAAY0B,gBAE1B,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,0CAjFT,c,yBCPTQ,EAAM,iCAECC,EAAS,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACjBC,EAAgBJ,EAChBE,IACAE,EAAa,UAAMJ,EAAN,sBAAuBE,IAHnB,kBAMMG,IAAMC,IAAIF,GANhB,uBAMTnC,EANS,EAMTA,KACFsC,EAAe,CACjBrC,UAAWD,EAAKC,UAChBC,UAAWF,EAAKE,UAChBC,OAAQH,EAAKG,OACbC,WAAYJ,EAAKI,YAXJ,kBAaVkC,GAbU,kCAejBC,QAAQC,IAAR,MAfiB,0DAAH,sDAmBTC,EAAc,uCAAG,gCAAAP,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KACF0C,EAAe1C,EAAK2C,KAAI,SAACC,GAAD,MAAgB,CAC1C3C,UAAW2C,EAAU3C,UAAU4C,MAC/B1C,OAAQyC,EAAUzC,OAAO0C,MACzB7C,KAAM4C,EAAUE,eANE,kBAQfJ,GARe,gCAUtBH,QAAQC,IAAR,MAVsB,yDAAH,qDAcdO,EAAc,uCAAG,8BAAAb,EAAA,+EAIZE,IAAMC,IAAN,UAAaN,EAAb,eAJY,uBAGViB,EAHU,EAGlBhD,KAAQgD,UAHU,kBAKfA,EAAUL,KAAI,SAACV,GAAD,OAAaA,EAAQgB,SALpB,gCAOtBV,QAAQC,IAAR,MAPsB,yDAAH,qD,yBC4BZU,EA5DD,SAAC,GAAyD,IAAD,IAAtDlD,KAAQC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,OAAU8B,EAAc,EAAdA,QAAc,EACjCkB,mBAAS,IADwB,mBAC5DC,EAD4D,KACjDC,EADiD,KAGnEC,qBAAU,YACQ,uCAAG,sBAAApB,EAAA,kEACbmB,EADa,SACMZ,IADN,6EAAH,qDAGdc,KACD,IAEH,IAAMC,EAAWvD,EACb,kBAAC,MAAD,CACID,KAAM,CACFyD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CACN,CACIC,MAAO,SACPC,gBAAiB,CACb,uBACA,uBACA,wBAEJ5D,KAAM,CAACC,EAAUyB,MAAOxB,EAAUwB,MAAOvB,EAAOuB,UAI5DmC,QAAS,CACLC,OAAQ,CAAEC,SAAS,GACnBC,MAAO,CAAED,SAAS,EAAME,KAAK,oBAAD,OAAsBhC,OAG1D,KAEEiC,EAAYd,EAAUe,OACxB,kBAAC,OAAD,CACInE,KAAM,CACFyD,OAAQL,EAAUT,KAAI,qBAAG3C,QACzB0D,SAAU,CACN,CACI1D,KAAMoD,EAAUT,KAAI,qBAAG1C,aACvB0D,MAAO,WACPS,YAAa,UACbC,MAAM,GAEV,CACIrE,KAAMoD,EAAUT,KAAI,qBAAGxC,UACvBwD,MAAO,SACPS,YAAa,MACbR,gBAAiB,wBACjBS,MAAM,OAKtB,KACJ,OACI,yBAAKhE,UAAWC,IAAOC,WAAY0B,EAAUuB,EAAWU,I,mCC3BjDI,EA7BO,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAA0B,EACbpB,mBAAS,IADI,mBACxCH,EADwC,KAC7BwB,EAD6B,KAU/C,OAPAlB,qBAAU,YACQ,uCAAG,sBAAApB,EAAA,kEACbsC,EADa,SACMzB,IADN,6EAAH,qDAGdQ,KACD,CAACiB,IAGA,6BACI,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC3B,kBAACC,EAAA,EAAD,CACIC,aAAa,GACbC,SAAU,SAACC,GAAD,OAAOP,EAAoBO,EAAEC,OAAOrD,SAE9C,4BAAQA,MAAM,IAAd,aACCsB,EAAUL,KAAI,SAACV,EAAS+C,GAAV,OACX,4BAAQC,IAAKD,EAAGtD,MAAOO,GAClBA,U,kCCcdiD,E,4MAhCXC,MAAQ,CACJnF,KAAM,GACNiC,QAAS,I,EAQbsC,oB,uCAAsB,WAAOtC,GAAP,eAAAC,EAAA,sEACQF,EAAUC,GADlB,OACZmD,EADY,OAElB,EAAKC,SAAS,CAAErF,KAAMoF,EAAanD,QAASA,IAF1B,2C,wPAJQD,I,OAApBoD,E,OACNE,KAAKD,SAAS,CAAErF,KAAMoF,I,qIAQhB,IAAD,EACqBE,KAAKH,MAAvBnF,EADH,EACGA,KAAMiC,EADT,EACSA,QACd,OACI,yBAAK5B,UAAWC,IAAOC,WACnB,yBACIF,UAAWC,IAAOiF,MAClBC,IAAKC,IACLC,IAAI,YAER,kBAAC,EAAD,CAAO1F,KAAMA,IACb,kBAAC,EAAD,CAAeuE,oBAAqBe,KAAKf,sBACzC,kBAAC,EAAD,CAAOvE,KAAMA,EAAMiC,QAASA,S,GA3B1B0D,IAAMC,WCFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjDnG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,qC,mBCDhCD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.95b47608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Cards.module.css\";\nimport cn from \"classnames\";\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    //console.log(props.data);\n    if (!confirmed) {\n        return \"loading...\";\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid\n                    item\n                    component={Card}\n                    xs={12}\n                    md={3}\n                    className={cn(styles.card, styles.infected)}\n                >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Infected\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            Number of active cases of COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid\n                    item\n                    component={Card}\n                    xs={12}\n                    md={3}\n                    className={cn(styles.card, styles.recovered)}\n                >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Recovered\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            Number of recoveries cases of COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid\n                    item\n                    component={Card}\n                    xs={12}\n                    md={3}\n                    className={cn(styles.card, styles.deaths)}\n                >\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Deaths\n                        </Typography>\n                        <Typography variant=\"h5\" gutterBottom>\n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            Number of death caused by COVID-19\n                        </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if (country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n    try {\n        const { data } = await axios.get(changeableUrl);\n        const modifiedData = {\n            confirmed: data.confirmed,\n            recovered: data.recovered,\n            deaths: data.deaths,\n            lastUpdate: data.lastUpdate,\n        };\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${url}/daily`);\n        const modifieddata = data.map((dailydata) => ({\n            confirmed: dailydata.confirmed.total,\n            deaths: dailydata.deaths.total,\n            data: dailydata.reportDate,\n        }));\n        return modifieddata;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const {\n            data: { countries },\n        } = await axios.get(`${url}/countries`);\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        };\n        fetchAPI();\n    }, []);\n\n    const barChart = confirmed ? (\n        <Bar\n            data={{\n                labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n                datasets: [\n                    {\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgba(0, 0, 255, 0.5)\",\n                            \"rgba(0, 255, 0, 0.5)\",\n                            \"rgba(255, 0, 0, 0.5)\",\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value],\n                    },\n                ],\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${country}` },\n            }}\n        />\n    ) : null;\n\n    const LineChart = dailyData.length ? (\n        <Line\n            data={{\n                labels: dailyData.map(({ data }) => data), //returns an array of date\n                datasets: [\n                    {\n                        data: dailyData.map(({ confirmed }) => confirmed), //returns an array of confirmed cases\n                        label: \"Infected\",\n                        borderColor: \"#3333ff\",\n                        fill: true,\n                    },\n                    {\n                        data: dailyData.map(({ deaths }) => deaths), //returns an array\n                        label: \"Deaths\",\n                        borderColor: \"red\",\n                        backgroundColor: \"rgba(255, 0, 0, 0.5 )\",\n                        fill: true,\n                    },\n                ],\n            }}\n        />\n    ) : null;\n    return (\n        <div className={styles.container}>{country ? barChart : LineChart}</div>\n    );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"../../api\";\n\nconst CountryPicker = ({ handleCountryChange }) => {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        };\n        fetchAPI();\n    }, [setCountries]);\n\n    return (\n        <div>\n            <FormControl className={styles.formControl}>\n                <NativeSelect\n                    defaultValue=\"\"\n                    onChange={(e) => handleCountryChange(e.target.value)}\n                >\n                    <option value=\"\">The World</option>\n                    {countries.map((country, i) => (\n                        <option key={i} value={country}>\n                            {country}\n                        </option>\n                    ))}\n                </NativeSelect>\n            </FormControl>\n        </div>\n    );\n};\n\nexport default CountryPicker;\n","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/COVID19.png\";\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: \"\",\n    };\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({ data: fetchedData, country: country });\n    };\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img\n                    className={styles.image}\n                    src={coronaImage}\n                    alt=\"COVID19\"\n                />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/COVID19.d7265326.png\";"],"sourceRoot":""}